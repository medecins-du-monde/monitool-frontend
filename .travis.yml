language: node_js
node_js:
  - 10

cache: npm

install:
  - npm install -g @angular/cli

stage:
- test
- deploy

jobs:
  include:
    - stage: test
      before_script: npm i
      script: npm run lint
      fast_finish: true
    - stage: deploy
      if: branch = dev
      before_install:
        # Decrypt the git_deploy_key.enc key into /tmp/monitoolbackdev
        - openssl aes-256-cbc -K $encrypted_bea0181439c1_key -iv $encrypted_bea0181439c1_iv -in keys/monitoolfrontdev.enc -out /tmp/monitoolfrontdev -d
        # Make sure only the current user can read the private key
        - chmod 600 /tmp/monitoolfrontdev
        # Create a script to return the passphrase environment variable to ssh-add
        - echo 'echo ${SSH_PASSPHRASE_DEV}' > /tmp/askpass && chmod +x /tmp/askpass
        # Start the authentication agent
        - eval "$(ssh-agent -s)"
        # Add the key to the authentication agent
        - DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/monitoolfrontdev </dev/null
      before_script: npm i 
      script:
        - npm run build --configuration=beta
        - rsync -e "ssh -i /tmp/monitoolfrontprod -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes" -avzr --delete dist/mdm-monitool-frontend/* reliefapps@92.243.25.191:/var/www/html/mdm-monitool-frontend
    - stage: deploy
      if: branch = uat
      before_install:
        # Decrypt the git_deploy_key.enc key into /tmp/monitoolbackuat
        - openssl aes-256-cbc -K $encrypted_bea0181439c1_key -iv $encrypted_bea0181439c1_iv -in keys/monitoolfrontuat.enc -out /tmp/monitoolfrontuat -d
        # Make sure only the current user can read the private key
        - chmod 600 /tmp/monitoolfrontuat
        # Create a script to return the passphrase environment variable to ssh-add
        - echo 'echo ${SSH_PASSPHRASE_UAT}' > /tmp/askpass && chmod +x /tmp/askpass
        # Start the authentication agent
        - eval "$(ssh-agent -s)"
        # Add the key to the authentication agent
        - DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/monitoolfrontuat </dev/null
      before_script: npm i 
      script:
        - npm run build --configuration=uat
        - rsync -e "ssh -i /tmp/monitoolfrontprod -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes" -avzr --delete dist/mdm-monitool-frontend/* medecinsdumonde@52.148.234.173:/var/www/html/mdm-monitool-frontend
    - stage: deploy
      if: branch = master
      before_install:
        # Decrypt the git_deploy_key.enc key into /tmp/monitoolbackuat
        - openssl aes-256-cbc -K $encrypted_bea0181439c1_key -iv $encrypted_bea0181439c1_iv -in keys/monitoolfrontprod.enc -out /tmp/monitoolfrontprod -d
        # Make sure only the current user can read the private key
        - chmod 600 /tmp/monitoolfrontprod
        # Create a script to return the passphrase environment variable to ssh-add
        - echo 'echo ${SSH_PASSPHRASE_PROD}' > /tmp/askpass && chmod +x /tmp/askpass
        # Start the authentication agent
        - eval "$(ssh-agent -s)"
        # Add the key to the authentication agent
        - DISPLAY=":0.0" SSH_ASKPASS="/tmp/askpass" setsid ssh-add /tmp/monitoolfrontprod </dev/null
      before_script: npm i 
      script:
        - npm run build -- --prod
        - rsync -e "ssh -i /tmp/monitoolfrontprod -o StrictHostKeyChecking=no -o PubkeyAuthentication=yes" -avzr --delete dist/mdm-monitool-frontend/* medecinsdumonde@monitool.medecinsdumonde.net:/var/www/html/mdm-monitool-frontend
    
